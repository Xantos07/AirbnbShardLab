services:
  mongodb:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mongodb
    ports:
      - "27017:27017"
      - "3307:3307"
    volumes:
      - mongodb_data:/data/db
      - ./requetes:/scripts
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    networks:
      - airbnb-network
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_AUTH_DATABASE: admin
      ME_CONFIG_BASICAUTH_USERNAME: ${ME_CONFIG_BASICAUTH_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${ME_CONFIG_BASICAUTH_PASSWORD}
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - airbnb-network

  data-import:
    build: ./data_import
    container_name: data-import
    depends_on:
      mongodb:
        condition: service_healthy
    volumes:
      - ./data:/app/data
      - ./.env:/app/.env
    networks:
      - airbnb-network

  mongo-queries:
    image: mongo:6.0
    container_name: mongo-queries
    depends_on:
      mongodb:
        condition: service_healthy
    volumes:
      - ./requetes:/scripts
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    entrypoint: ["mongosh", "--host", "mongodb", "-u", "${MONGO_INITDB_ROOT_USERNAME}", "-p", "${MONGO_INITDB_ROOT_PASSWORD}", "--authenticationDatabase", "admin", "/scripts/requetes.js"]
    networks:
      - airbnb-network

  analysis:
    build: ./analysis
    container_name: analysis
    depends_on:
      mongodb:
        condition: service_healthy
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - ./requetes:/scripts
    networks:
      - airbnb-network

volumes:
  mongodb_data:
    driver: local

networks:
  airbnb-network:
    driver: bridge